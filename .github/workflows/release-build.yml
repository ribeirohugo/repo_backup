name: Release Build

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    strategy:
      matrix:
        goos: [windows, darwin, linux]
        goarch: [amd64]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.25"

      - name: Clean
        run: go clean -modcache -v

      - name: Build binary
        run: |
          mkdir -p ./publish
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} \
            go build -o ./publish/repobackup-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }} ./cmd/repobackup/main.go

      - name: Upload Binaries
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}  # From release event
          asset_path: ./publish/*
          asset_name: "repobackup-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}"
          asset_content_type: application/zip
